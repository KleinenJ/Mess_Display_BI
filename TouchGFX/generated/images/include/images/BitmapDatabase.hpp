// Generated by imageconverter. Please, do not edit!

#ifndef TOUCHGFX_BITMAPDATABASE_HPP
#define TOUCHGFX_BITMAPDATABASE_HPP

#include <touchgfx/hal/Types.hpp>
#include <touchgfx/Bitmap.hpp>

const uint16_t BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_NORMAL_ID = 0;
const uint16_t BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID = 1;
const uint16_t BITMAP_BI_ID = 2;
const uint16_t BITMAP_ECKIG_ID = 3;
const uint16_t BITMAP_ECKIG_BL_ID = 4;
const uint16_t BITMAP_H_ID = 5;
const uint16_t BITMAP_HENG_ID = 6;
const uint16_t BITMAP_ICON_THEME_IMAGES_CONTENT_ADD_CIRCLE_35_35_E8F6FB_SVG_ID = 7;
const uint16_t BITMAP_ICON_THEME_IMAGES_CONTENT_ADD_CIRCLE_35_35_FF0000_SVG_ID = 8;
const uint16_t BITMAP_ICON_THEME_IMAGES_CONTENT_REMOVE_CIRCLE_35_35_E8F6FB_SVG_ID = 9;
const uint16_t BITMAP_ICON_THEME_IMAGES_CONTENT_REMOVE_CIRCLE_35_35_FF0000_SVG_ID = 10;
const uint16_t BITMAP_W_LIN_ID = 11;
const uint16_t BITMAP_W_LIN_GR_ID = 12;

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance();
uint16_t getInstanceSize();
} // namespace BitmapDatabase

#endif // TOUCHGFX_BITMAPDATABASE_HPP
