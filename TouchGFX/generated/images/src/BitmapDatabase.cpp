// 4.23.2 0x4359b7c0
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_button_icon_rounded_micro_fill_normal[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_NORMAL_ID = 0, Size: 36x36 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_icon_rounded_micro_fill_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_FILL_PRESSED_ID = 1, Size: 36x36 pixels
extern const unsigned char image_bi[]; // BITMAP_BI_ID = 2, Size: 1744x262 pixels
extern const unsigned char image_eckig[]; // BITMAP_ECKIG_ID = 3, Size: 26x26 pixels
extern const unsigned char image_eckig_bl[]; // BITMAP_ECKIG_BL_ID = 4, Size: 39x39 pixels
extern const unsigned char image_h[]; // BITMAP_H_ID = 5, Size: 1033x1036 pixels
extern const unsigned char image_heng[]; // BITMAP_HENG_ID = 6, Size: 489x269 pixels
extern const unsigned char image_icon_theme_images_content_add_circle_35_35_e8f6fb_svg[]; // BITMAP_ICON_THEME_IMAGES_CONTENT_ADD_CIRCLE_35_35_E8F6FB_SVG_ID = 7, Size: 35x35 pixels
extern const unsigned char image_icon_theme_images_content_add_circle_35_35_ff0000_svg[]; // BITMAP_ICON_THEME_IMAGES_CONTENT_ADD_CIRCLE_35_35_FF0000_SVG_ID = 8, Size: 35x35 pixels
extern const unsigned char image_icon_theme_images_content_remove_circle_35_35_e8f6fb_svg[]; // BITMAP_ICON_THEME_IMAGES_CONTENT_REMOVE_CIRCLE_35_35_E8F6FB_SVG_ID = 9, Size: 35x35 pixels
extern const unsigned char image_icon_theme_images_content_remove_circle_35_35_ff0000_svg[]; // BITMAP_ICON_THEME_IMAGES_CONTENT_REMOVE_CIRCLE_35_35_FF0000_SVG_ID = 10, Size: 35x35 pixels
extern const unsigned char image_w_lin[]; // BITMAP_W_LIN_ID = 11, Size: 129x7 pixels
extern const unsigned char image_w_lin_gr[]; // BITMAP_W_LIN_GR_ID = 12, Size: 129x7 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_button_icon_rounded_micro_fill_normal, 0, 36, 36, 2, 2, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_icon_rounded_micro_fill_pressed, 0, 36, 36, 2, 2, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bi, 0, 1744, 262, 0, 0, 1744, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 262, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eckig, 0, 26, 26, 0, 0, 26, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 26, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eckig_bl, 0, 39, 39, 0, 0, 39, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 39, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_h, 0, 1033, 1036, 0, 0, 1033, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 1036, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_heng, 0, 489, 269, 1, 0, 487, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 269, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_content_add_circle_35_35_e8f6fb_svg, 0, 35, 35, 24, 10, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_content_add_circle_35_35_ff0000_svg, 0, 35, 35, 24, 10, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 14, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_content_remove_circle_35_35_e8f6fb_svg, 0, 35, 35, 7, 7, 19, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_icon_theme_images_content_remove_circle_35_35_ff0000_svg, 0, 35, 35, 7, 7, 19, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_w_lin, 0, 129, 7, 0, 0, 129, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 7, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_w_lin_gr, 0, 129, 7, 0, 0, 129, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 7, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
