/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MESSVIEWBASE_HPP
#define MESSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mess_screen/MessPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class MessViewBase : public touchgfx::View<MessPresenter>
{
public:
    MessViewBase();
    virtual ~MessViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Adj_Displ_PWM(int value)
    {
        // Override and implement this function in Mess
    }
    virtual void HVI_Plus()
    {
        // Override and implement this function in Mess
    }
    virtual void HVI_Minus()
    {
        // Override and implement this function in Mess
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box BG;
    touchgfx::TextArea Text_F_3;
    touchgfx::BoxWithBorder boxWithBorder5;
    touchgfx::BoxWithBorder boxWithBorder4;
    touchgfx::BoxWithBorder boxWithBorder3;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::BoxWithBorder Box_HV_BG_1;
    touchgfx::Box Box_Gelb;
    touchgfx::Box Box_Blau;
    touchgfx::Box Box_P;
    touchgfx::TextArea Text_F_1;
    touchgfx::Box Box_F;
    touchgfx::Box Box_L;
    touchgfx::TextArea Name;
    touchgfx::TextArea Text_PvF;
    touchgfx::TextAreaWithOneWildcard PvF10;
    touchgfx::TextAreaWithOneWildcard MIoU;
    touchgfx::TextAreaWithOneWildcard MPoU;
    touchgfx::TextAreaWithOneWildcard MPoA;
    touchgfx::TextAreaWithOneWildcard HVU;
    touchgfx::TextAreaWithOneWildcard HVI;
    touchgfx::TextAreaWithOneWildcard HVI_Soll;
    touchgfx::TextAreaWithOneWildcard HV_HW;
    touchgfx::TextAreaWithOneWildcard HV_SW;
    touchgfx::TextAreaWithOneWildcard HV_Status;
    touchgfx::TextAreaWithOneWildcard PvF25;
    touchgfx::TextAreaWithOneWildcard TvF;
    touchgfx::TextAreaWithOneWildcard TnF;
    touchgfx::TextAreaWithOneWildcard LvF;
    touchgfx::TextAreaWithOneWildcard LnF;
    touchgfx::TextAreaWithOneWildcard PnF10;
    touchgfx::TextArea Text_PnF;
    touchgfx::TextArea Text_TvF;
    touchgfx::TextArea Text_TnF;
    touchgfx::TextArea Text_LvF;
    touchgfx::TextArea Text_LnF;
    touchgfx::TextArea Text_IoU;
    touchgfx::TextArea Text_PoUA;
    touchgfx::TextArea Text_HV_U;
    touchgfx::TextArea Text_HV_I;
    touchgfx::TextArea Text_HV_I_Soll;
    touchgfx::TextArea Text_HV_HW;
    touchgfx::TextArea Text_HV_SW;
    touchgfx::TextArea Text_HV_I_Ist;
    touchgfx::TextArea Text_PI;
    touchgfx::TextArea Version;
    touchgfx::TextArea Adresse;
    touchgfx::TextArea Text_P;
    touchgfx::TextArea Text_L;
    touchgfx::TextArea Text_F;
    touchgfx::TextArea BG_Hell;
    touchgfx::ScalableImage Logo_Hengst_Mess;
    touchgfx::Slider slider_helligkeit;
    touchgfx::ButtonWithIcon But_HV_I_P;
    touchgfx::ButtonWithIcon But_HV_I_M;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::Line line2;
    touchgfx::PainterRGB565 line2Painter;
    touchgfx::TextArea textArea3;
    touchgfx::Line line3;
    touchgfx::PainterRGB565 line3Painter;
    touchgfx::TextArea textArea4;
    touchgfx::TextAreaWithOneWildcard PnF25;
    touchgfx::TextArea textArea6;
    touchgfx::Line line4;
    touchgfx::PainterRGB565 line4Painter;
    touchgfx::Line line5;
    touchgfx::PainterRGB565 line5Painter;
    touchgfx::TextArea textArea7;
    touchgfx::Line line6;
    touchgfx::PainterRGB565 line6Painter;
    touchgfx::TextArea textArea8;
    touchgfx::TextArea textArea9;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PVF10_SIZE = 10;
    touchgfx::Unicode::UnicodeChar PvF10Buffer[PVF10_SIZE];
    static const uint16_t MIOU_SIZE = 10;
    touchgfx::Unicode::UnicodeChar MIoUBuffer[MIOU_SIZE];
    static const uint16_t MPOU_SIZE = 10;
    touchgfx::Unicode::UnicodeChar MPoUBuffer[MPOU_SIZE];
    static const uint16_t MPOA_SIZE = 10;
    touchgfx::Unicode::UnicodeChar MPoABuffer[MPOA_SIZE];
    static const uint16_t HVU_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HVUBuffer[HVU_SIZE];
    static const uint16_t HVI_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HVIBuffer[HVI_SIZE];
    static const uint16_t HVI_SOLL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HVI_SollBuffer[HVI_SOLL_SIZE];
    static const uint16_t HV_HW_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HV_HWBuffer[HV_HW_SIZE];
    static const uint16_t HV_SW_SIZE = 10;
    touchgfx::Unicode::UnicodeChar HV_SWBuffer[HV_SW_SIZE];
    static const uint16_t HV_STATUS_SIZE = 20;
    touchgfx::Unicode::UnicodeChar HV_StatusBuffer[HV_STATUS_SIZE];
    static const uint16_t PVF25_SIZE = 10;
    touchgfx::Unicode::UnicodeChar PvF25Buffer[PVF25_SIZE];
    static const uint16_t TVF_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TvFBuffer[TVF_SIZE];
    static const uint16_t TNF_SIZE = 10;
    touchgfx::Unicode::UnicodeChar TnFBuffer[TNF_SIZE];
    static const uint16_t LVF_SIZE = 10;
    touchgfx::Unicode::UnicodeChar LvFBuffer[LVF_SIZE];
    static const uint16_t LNF_SIZE = 10;
    touchgfx::Unicode::UnicodeChar LnFBuffer[LNF_SIZE];
    static const uint16_t PNF10_SIZE = 10;
    touchgfx::Unicode::UnicodeChar PnF10Buffer[PNF10_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 15360;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MessViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;
    touchgfx::Callback<MessViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // MESSVIEWBASE_HPP
