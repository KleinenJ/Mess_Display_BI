/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId XLB = 0;
    static const touchgfx::FontId LB = 1;
    static const touchgfx::FontId L = 2;
    static const touchgfx::FontId LM = 3;
    static const touchgfx::FontId M = 4;
    static const touchgfx::FontId SB = 5;
    static const touchgfx::FontId S = 6;
    static const touchgfx::FontId XS = 7;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId XLB = 0; // calibrib_100_4bpp
    static const touchgfx::FontId LB = 1;  // calibrib_40_4bpp
    static const touchgfx::FontId L = 2;   // calibri_40_4bpp
    static const touchgfx::FontId LM = 3;  // calibri_25_4bpp
    static const touchgfx::FontId M = 4;   // calibri_20_4bpp
    static const touchgfx::FontId SB = 5;  // calibrib_15_4bpp
    static const touchgfx::FontId S = 6;   // calibri_15_4bpp
    static const touchgfx::FontId XS = 7;  // calibri_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 8;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /*flashReader*/)
    {
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return 0;
    }
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
